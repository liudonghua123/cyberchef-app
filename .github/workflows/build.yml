name: build
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to build'
        required: true
        default: 'main'
      tag_version:
        description: 'The version of CyberChef upstream, eg: use 10.17.0 instead of v10.17.0'
        required: true
        default: '10.17.0'

# https://docs.github.com/zh/actions/using-jobs/assigning-permissions-to-jobs
permissions: write-all
# permissions:
#   pull-requests: write
#   contents: write
#   repository-projects: write

env:
  APP_NAME: cyberchef-app

defaults:
  run:
    shell: bash

jobs:
  build-depolyable-static-files:
    name: Build depoly files for ${{ github.event.inputs.tag_version }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: 'Checkout and push specified tag version of scratch'
        run: |
          git config --global pull.rebase false
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          cd CyberChef
          git status
          git remote -v
          git fetch --all --tags
          git checkout tags/v${{ github.event.inputs.tag_version }}
          git status
          cd ..
          git add CyberChef
          git commit -m "update CyberChef to v${{ github.event.inputs.tag_version }}" || true
          # update version in README.md using sed
          sed -i "s/[0-9]\+\.[0-9]\+\.[0-9]\+/${{ github.event.inputs.tag_version }}/g" README.md
          git add README.md
          git commit -m "update README.md" || true
          git tag ${{ github.event.inputs.tag_version }} || true
          git push
          git push --tag
      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: 'npm'
      - name: 'Initialization'
        run: |
          sudo apt-get install xvfb
          npm install
        working-directory: CyberChef
      # - name: 'Patching...'
      #   run: |
      #     # try to fix staticpkg failure when process homepage-content.md
      #     # TypeError: Cannot read properties of undefined (reading 'replace')
      #     # The fix is change the fallback returns of resolveMd to targetMd
      #     sed -i -z -E 's#(function resolveMd.*?)return undefined;#\1return targetMd;#g' node_modules/pxt-core/built/nodeutil.js
      #   working-directory: CyberChef
      - name: 'Building CyberChef'
        run: |
          npm run build
          # remove dumplicated CyberChef_vX.Y.Z.zip
          rm -rf build/prod/CyberChef_v*.zip
        working-directory: CyberChef
      - name: Prepare build files achive
        run: |
          ls -lR ./CyberChef/build/
          7z a -tzip ${{env.APP_NAME}}-${{ github.event.inputs.tag_version }}.zip -r ./CyberChef/build/prod/*
      - uses: actions/upload-artifact@v4
        with:
          name: CyberChef-dist
          path: ${{env.APP_NAME}}-${{ github.event.inputs.tag_version }}.zip
      - name: Publish build files achive to release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.tag_version }}
          files: ${{env.APP_NAME}}-${{ github.event.inputs.tag_version }}.zip
          draft: false
          prerelease: false

  build-native-executable:
    name: 'Build native executable'
    needs: [build-depolyable-static-files]
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    runs-on: ${{matrix.os}}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v4
        with:
          name: CyberChef-dist
      - name: Extract CyberChef-dist
        run: |
          rm -rf dist
          unzip ${{env.APP_NAME}}-${{ github.event.inputs.tag_version }}.zip -d dist
      - name: Display structure of downloaded files
        run: ls -l . dist
      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: 'yarn'
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Tauri build
        id: tauri-build
        uses: liudonghua123/tauri-build-action@main
        with:
          project_name: ${{env.APP_NAME}}
          identifier: com.${{env.APP_NAME}}.app
          version: ${{ github.event.inputs.tag_version }}
          frontend_dist: ../dist
          icon: app-icon.png
      - name: Display structure of build files
        run: |
          ls -la . tauri-build
        shell: bash
      - name: Publish binary to release
        continue-on-error: true
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.tag_version }}
          files: tauri-build/*
          draft: false
          prerelease: false
